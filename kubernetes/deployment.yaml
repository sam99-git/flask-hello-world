apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-hello-world
  namespace: flask-hello-world-namespace  # Custom namespace
spec:
  replicas: 1
  selector:  # Added selector
    matchLabels:
      app: flask-hello-world
  template:
    metadata:
      labels:
        app: flask-hello-world
    spec:
      automountServiceAccountToken: false  # Disable service account token mount
      securityContext:
        runAsUser: 10000  # High UID to avoid conflicts
        seccompProfile:
          type: RuntimeDefault  # Set seccomp profile
      imagePullSecrets:
       - name: regcred    
      containers:
        - name: flask-hello-world
          image: flask-hello-world@sha256:b7eba23d021c7053804eb076d1779dfb98ef4f25062abc29088ccca204c9c691  # Use digest instead of tag
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: my-volume
              mountPath: /my-data
          securityContext:
            allowPrivilegeEscalation: false  # Prevent privilege escalation
            runAsNonRoot: true  # Ensure non-root user
            readOnlyRootFilesystem: true  # Make filesystem read-only
            capabilities:
              drop:
                - ALL  # Drop all unnecessary capabilities
          resources:
            limits:
              cpu: "500m"  # Set CPU limit
              memory: "256Mi"  # Set memory limit
            requests:
              cpu: "100m"  # Set CPU request
              memory: "128Mi"  # Set memory request
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
      serviceAccountName: flask-hello-world-sa
      volumes:  # Added volumes section
        - name: my-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: flask-hello-world
  namespace: flask-hello-world-namespace  # Custom namespace
spec:
  type: NodePort
  selector:
    app: flask-hello-world
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 30007
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: flask-hello-world-network-policy
  namespace: flask-hello-world-namespace
spec:
  podSelector:
    matchLabels:
      app: flask-hello-world
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: flask-hello-world
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: flask-hello-world